name: Run tests for the given parameters
on:
  workflow_call:
    inputs:
      os-runner:
        type: string
        default: 'macos-latest'
      scheme:
        description: 'The scheme to run the tests'
        required: true
        type: string
      platform:
        description: 'The platform in which to run these tests'
        required: true
        type: string
      project_path:
        required: false
        type: string
      xcode_version:
        description: 'The version of Xcode used to run these tests'
        default: 'latest'
        type: string
      destination:
        default: ''
        type: string
      resource_subfolder:
        required: true
        type: string
      timeout-minutes:
        description: 'The timeout for each execution'
        required: false
        type: number
        default: 30

permissions:
    id-token: write
    contents: read

jobs:
  integration-tests:
    name: ${{ inputs.platform }} Tests | ${{ inputs.scheme }}
    runs-on: ${{ inputs.os-runner }}
    if: inputs.platform != 'macOS' # macOS is not supported for Integration Tests
    timeout-minutes: ${{ inputs.timeout-minutes }}
    environment: IntegrationTest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 #v4.1.1
        with:
          persist-credentials: false

      - name: Get build parameters for ${{ inputs.platform}}
        id: platform
        uses: ./.github/composite_actions/get_platform_parameters
        with:
          platform: ${{ inputs.platform }}
          xcode_version: ${{ inputs.xcode_version }}
          destination: ${{ inputs.destination }}

      - name: Create the test configuration directory
        run: mkdir -p ~/.aws-amplify/amplify-ios/testconfiguration/

      - name: Download the Integration Test configurations
        uses: ./.github/composite_actions/download_test_configuration
        with:
          resource_subfolder: ${{ inputs.resource_subfolder }}
          aws_role_to_assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws_region: ${{ secrets.AWS_REGION }}
          aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET_INTEG_V2 }}
          destination: ~/.aws-amplify/amplify-ios/testconfiguration/

      - name: Attempt to use the dependencies cache
        id: dependencies-cache
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/Library/Developer/Xcode/DerivedData/Amplify
          key: amplify-packages-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            amplify-packages-

      - name: Attempt to restore the build cache
        id: build-cache
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: Amplify-${{ inputs.platform }}-build-cache

      - name: Run ${{ inputs.platform }} Integration Tests
        id: run-tests
        continue-on-error: true
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ inputs.scheme }}
          destination: ${{ steps.platform.outputs.destination }}
          sdk: ${{ steps.platform.outputs.sdk }}
          xcode_path: /Applications/Xcode_${{ steps.platform.outputs.xcode-version }}.app
          project_path: ${{ inputs.project_path }}
          generate_coverage: false
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: ${{ steps.dependencies-cache.outputs.cache-hit }}
          test_without_building: false
          other_flags: -test-iterations 3 -retry-tests-on-failure

      - name: Retry ${{ inputs.platform }} Integration Tests
        if: steps.run-tests.outcome=='failure'
        id: retry-tests
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ inputs.scheme }}
          destination: ${{ steps.platform.outputs.destination }}
          sdk: ${{ steps.platform.outputs.sdk }}
          xcode_path: /Applications/Xcode_${{ steps.platform.outputs.xcode-version }}.app
          project_path: ${{ inputs.project_path }}
          generate_coverage: false
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: true
          # Only attempt to test without building when we are not using any cache.
          test_without_building: ${{ !steps.build-cache.outputs.cache-hit }}
          other_flags: -test-iterations 3 -retry-tests-on-failure
