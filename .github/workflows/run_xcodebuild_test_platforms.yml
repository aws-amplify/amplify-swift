name: Run xcodebuild test on all supported platforms
on:
  workflow_call:
    inputs:
      scheme:
        description: 'The scheme to run the tests'
        required: true
        type: string
      timeout-minutes:
        description: 'The timeout for each execution'
        required: false
        type: number
        default: 30
      generate_coverage_report:
        description: 'Whether to generate and report code coverage'
        required: false
        type: boolean
        default: false
      retry_on_error:
        description: 'Whether to automatically retry if the tests fail'
        required: false
        type: boolean
        default: true
      other_flags:
        required: false
        type: string
        default: ''

env:
  SCHEME: ${{ inputs.scheme }}
  RETRY_ON_ERROR: ${{ inputs.retry_on_error }}

permissions:
    contents: read
    actions: write

jobs:
  test-iOS:
    name: ${{ inputs.scheme }} iOS Tests
    runs-on: macos-13
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3
        with:
          persist-credentials: false
      - name: Attempt to restore dependencies cache
        id: cache-packages
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/Library/Developer/Xcode/DerivedData/Amplify
          key: amplify-packages-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            amplify-packages-
      - name: Attempt to restore the build cache for this SHA
        id: restore-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-iOS-build-${{ github.sha }}
          restore-keys: |
            ${{ env.SCHEME }}-iOS-build-
      - name: Attempt to restore the build cache from main
        if: steps.restore-build.outputs.cache-hit != 'true'
        id: restore-main-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-iOS-latest-build-main
      - name: Run iOS Test Suite
        id: run-tests
        continue-on-error: ${{ env.RETRY_ON_ERROR == 'true' }}
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: 'platform=iOS Simulator,name=iPhone 14,OS=16.4'
          xcode_path: '/Applications/Xcode_14.3.app'
          generate_coverage: ${{ inputs.generate_coverage_report }}
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: ${{ steps.cache-packages.outputs.cache-hit }}
          test_without_building: ${{ steps.restore-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Retry iOS Test Suite if needed
        if: inputs.retry_on_error == true && steps.run-tests.outcome=='failure'
        id: retry-tests
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: 'platform=iOS Simulator,name=iPhone 14,OS=16.4'
          xcode_path: '/Applications/Xcode_14.3.app'
          generate_coverage: ${{ inputs.generate_coverage_report }}
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: true
          # Only test without building when this exact SHA was cached or we did not restore the build from main.
          test_without_building: ${{ steps.restore-build.outputs.cache-hit || !steps.restore-main-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Save the SHA build cache for re-runs
        if: failure() && steps.retry-tests.outcome=='failure'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-iOS-build-${{ github.sha }}
      - name: Delete the SHA build cache on re-run success
        if: steps.restore-build.outputs.cache-matched-key
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-build.outputs.cache-matched-key }}
        shell: bash
      - name: Delete the old build cache on main
        if: github.ref_name == 'main' && steps.restore-main-build.outputs.cache-hit
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-main-build.outputs.cache-primary-key }}
        shell: bash
      - name: Save the new build cache on main
        if: github.ref_name == 'main'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ steps.restore-main-build.outputs.cache-primary-key }}
      - name: Upload Report File
        if: ${{ inputs.generate_coverage_report == true }}
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce #v3.1.2
        with:
          name: ${{ env.SCHEME }}-Coverage-${{ github.sha }}
          path: ${{ github.workspace }}/${{ env.SCHEME }}-Coverage.lcov
          if-no-files-found: error
          retention-days: 1


  test-macOS:
    name: ${{ inputs.scheme }} macOS Tests
    runs-on: macos-13
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3
        with:
          persist-credentials: false
      - name: Attempt to restore dependencies cache
        id: cache-packages
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/Library/Developer/Xcode/DerivedData/Amplify
          key: amplify-packages-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            amplify-packages-
      - name: Attempt to restore the build cache for this SHA
        id: restore-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-macOS-build-${{ github.sha }}
          restore-keys: |
            ${{ env.SCHEME }}-macOS-build-
      - name: Attempt to restore the build cache from main
        if: steps.restore-build.outputs.cache-hit != 'true'
        id: restore-main-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-macOS-latest-build-main
      - name: Run macOS Test Suite
        id: run-tests
        continue-on-error: ${{ env.RETRY_ON_ERROR == 'true' }}
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: platform=macOS,arch=x86_64
          sdk: macosx
          xcode_path: '/Applications/Xcode_14.3.app'
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: ${{ steps.cache-packages.outputs.cache-hit }}
          test_without_building: ${{ steps.restore-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Retry macOS Test Suite if needed
        if: inputs.retry_on_error == true && steps.run-tests.outcome=='failure'
        id: retry-tests
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: platform=macOS,arch=x86_64
          sdk: macosx
          xcode_path: '/Applications/Xcode_14.3.app'
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: true
          # Only test without building when this exact SHA was cached or we did not restore the build from main.
          test_without_building: ${{ steps.restore-build.outputs.cache-hit || !steps.restore-main-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Save the SHA build cache for re-runs
        if: failure() && steps.retry-tests.outcome=='failure'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-macOS-build-${{ github.sha }}
      - name: Delete the SHA build cache on re-run success
        if: steps.restore-build.outputs.cache-matched-key
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-build.outputs.cache-matched-key }}
        shell: bash
      - name: Delete the old build cache on main
        if: github.ref_name == 'main' && steps.restore-main-build.outputs.cache-hit
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-main-build.outputs.cache-primary-key }}
        shell: bash
      - name: Save the new build cache on main
        if: github.ref_name == 'main'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ steps.restore-main-build.outputs.cache-primary-key }}

  test-tvOS:
    name: ${{ inputs.scheme }} tvOS Tests
    runs-on: macos-13
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3
        with:
          persist-credentials: false
      - name: Attempt to restore dependencies cache
        id: cache-packages
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/Library/Developer/Xcode/DerivedData/Amplify
          key: amplify-packages-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            amplify-packages-
      - name: Attempt to restore the build cache for this SHA
        id: restore-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-tvOS-build-${{ github.sha }}
          restore-keys: |
            ${{ env.SCHEME }}-tvOS-build-
      - name: Attempt to restore the build cache from main
        if: steps.restore-build.outputs.cache-hit != 'true'
        id: restore-main-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-tvOS-latest-build-main
      - name: Run tvOS Test Suite
        id: run-tests
        continue-on-error: ${{ env.RETRY_ON_ERROR == 'true' }}
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=16.4
          sdk: appletvsimulator
          xcode_path: '/Applications/Xcode_14.3.app'
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: ${{ steps.cache-packages.outputs.cache-hit }}
          test_without_building: ${{ steps.restore-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Retry tvOS Test Suite if needed
        if: inputs.retry_on_error == true && steps.run-tests.outcome=='failure'
        id: retry-tests
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=16.4
          sdk: appletvsimulator
          xcode_path: '/Applications/Xcode_14.3.app'
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: true
          # Only test without building when this exact SHA was cached or we did not restore the build from main.
          test_without_building: ${{ steps.restore-build.outputs.cache-hit || !steps.restore-main-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Save the SHA build cache for re-runs
        if: failure() && steps.retry-tests.outcome=='failure'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-tvOS-build-${{ github.sha }}
      - name: Delete the SHA build cache on re-run success
        if: steps.restore-build.outputs.cache-matched-key
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-build.outputs.cache-matched-key }}
        shell: bash
      - name: Delete the old build cache on main
        if: github.ref_name == 'main' && steps.restore-main-build.outputs.cache-hit
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-main-build.outputs.cache-primary-key }}
        shell: bash
      - name: Save the new build cache on main
        if: github.ref_name == 'main'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ steps.restore-main-build.outputs.cache-primary-key }}

  test-watchOS:
    name: ${{ inputs.scheme }} watchOS Tests
    runs-on: macos-13
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3
        with:
          persist-credentials: false
      - name: Attempt to restore dependencies cache
        id: cache-packages
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/Library/Developer/Xcode/DerivedData/Amplify
          key: amplify-packages-${{ hashFiles('Package.resolved') }}
          restore-keys: |
            amplify-packages-
      - name: Attempt to restore the build cache for this SHA
        id: restore-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-watchOS-build-${{ github.sha }}
          restore-keys: |
            ${{ env.SCHEME }}-watchOS-build-
      - name: Attempt to restore the build cache from main
        if: steps.restore-build.outputs.cache-hit != 'true'
        id: restore-main-build
        timeout-minutes: 4
        continue-on-error: true
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-watchOS-latest-build-main
      - name: Run watchOS Test Suite
        id: run-tests
        continue-on-error: ${{ env.RETRY_ON_ERROR == 'true' }}
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: platform=watchOS Simulator,name=Apple Watch Series 8 (45mm),OS=9.4
          sdk: watchsimulator
          xcode_path: '/Applications/Xcode_14.3.app'
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: ${{ steps.cache-packages.outputs.cache-hit }}
          test_without_building: ${{ steps.restore-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Retry watchOS Test Suite if needed
        if: inputs.retry_on_error == true && steps.run-tests.outcome=='failure'
        id: retry-tests
        uses: ./.github/composite_actions/run_xcodebuild_test
        with:
          scheme: ${{ env.SCHEME }}
          destination: platform=watchOS Simulator,name=Apple Watch Series 8 (45mm),OS=9.4
          sdk: watchsimulator
          xcode_path: '/Applications/Xcode_14.3.app'
          cloned_source_packages_path: ~/Library/Developer/Xcode/DerivedData/Amplify
          derived_data_path: ${{ github.workspace }}/Build
          disable_package_resolution: true
          # Only test without building when this exact SHA was cached or we did not restore the build from main.
          test_without_building: ${{ steps.restore-build.outputs.cache-hit || !steps.restore-main-build.outputs.cache-hit }}
          other_flags: ${{ inputs.other_flags }}
      - name: Save the SHA build cache for re-runs
        if: failure() && steps.retry-tests.outcome=='failure'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ env.SCHEME }}-watchOS-build-${{ github.sha }}
      - name: Delete the SHA build cache on re-run success
        if: steps.restore-build.outputs.cache-matched-key
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-build.outputs.cache-matched-key }}
        shell: bash
      - name: Delete the old build cache on main
        if: github.ref_name == 'main' && steps.restore-main-build.outputs.cache-hit
        env:
          GH_TOKEN: ${{ github.token }}
        continue-on-error: true
        run: |
          gh cache delete ${{ steps.restore-main-build.outputs.cache-primary-key }}
        shell: bash
      - name: Save the new build cache on main
        if: github.ref_name == 'main'
        uses: actions/cache/save@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ${{ github.workspace }}/Build
          key: ${{ steps.restore-main-build.outputs.cache-primary-key }}
