# .circleci/config.yml

version: 2.1

parameters:
  ios-destination:
    type: string
    default: platform=iOS Simulator,name=iPhone 14,OS=latest
  macos-destination:
    type: string
    default: platform=macOS,arch=x86_64
  tvos-destination:
    type: string
    default: platform=tvOS Simulator,name=Apple TV 4K (3rd generation),OS=latest
  watchos-destination:
    type: string
    default: platform=watchOS Simulator,name=Apple Watch Series 8 (45mm),OS=latest

orbs:
  aws-cli: circleci/aws-cli@3.1.4
  ruby: circleci/ruby@2.0.0
  # Using inline orb for now
  getting-started-smoke-test:
    orbs:
      macos: circleci/macos@2
      node: circleci/node@5.0.2
      ruby: circleci/ruby@1.6.0
    commands:
      run-with-retry:
        description: Run command with retry
        parameters:
          label:
            description: Display name
            type: string
          command:
            description: Command to run
            type: string
          retry-count:
            description: Number of retry
            type: integer
            default: 3
          sleep:
            description: Wait duration until next retry
            type: integer
            default: 5
          no_output_timeout:
            description: Elapsed time the command can run without output
            type: string
            default: 10m
        steps:
          - run:
              name: << parameters.label >>
              command: |
                retry() {
                  MAX_RETRY=<< parameters.retry-count >>
                  n=0
                  until [ $n -ge $MAX_RETRY ]
                  do
                      << parameters.command >> && break
                      n=$[$n+1]
                      sleep << parameters.sleep >>
                  done
                  if [ $n -ge $MAX_RETRY ]; then
                    echo "failed: ${@}" >&2
                    exit 1
                  fi
                }
                retry
              no_output_timeout: << parameters.no_output_timeout >>
    jobs:
      ios:
        parameters:
          xcode-version:
            type: string
            default: 13.4.1
          simulator-device:
            type: string
            default: iPhone 13
          simulator-os-version:
            type: string
            default: "15.5"
        working_directory: ~/ios-canaries/canaries/example
        macos:
          xcode: <<parameters.xcode-version>>
        environment:
          FL_OUTPUT_DIR: output
        # Add steps to the job
        # See: https://circleci.com/docs/2.0/configuration-reference/#steps
        steps:
          - checkout:
              path: ~/ios-canaries
          - node/install
          - run: npm install -g @aws-amplify/cli
          - run: amplify init --quickstart --frontend ios
          - macos/preboot-simulator:
              device: <<parameters.simulator-device>>
              version: <<parameters.simulator-os-version>>
          - ruby/install-deps
          - run-with-retry:
              label: Run tests
              command: bundle exec fastlane scan --device "<<parameters.simulator-device>>" --deployment_target_version "<<parameters.simulator-os-version>>"

defaults: &defaults
  macos:
    xcode: '14.0.0'
  resource_class: macos.x86.medium.gen2
  environment:
    BUNDLE_JOBS: 4
    BUNDLE_RETRY: 3

commands:
  shallow_checkout:
    steps:
      - run:
          name: Checkout code shallow and change to working directory
          command: |
            git clone --depth 10 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" $CIRCLE_WORKING_DIRECTORY
            cd $CIRCLE_WORKING_DIRECTORY

            if [ -n "$CIRCLE_TAG" ]; then
              echo 'Fetch tag'
              git fetch --depth 10 --force origin "+refs/tags/${CIRCLE_TAG}:refs/tags/${CIRCLE_TAG}"
            elif [[ $(echo $CIRCLE_PULL_REQUEST | grep -E "${CIRCLE_BRANCH}$") ]]; then
              echo 'Fetch pull request'
              git fetch --depth 10 --force origin "$CIRCLE_BRANCH/head:remotes/origin/$CIRCLE_BRANCH"
            else
              echo 'Fetch branch'
              git fetch --depth 10 --force origin "$CIRCLE_BRANCH:remotes/origin/$CIRCLE_BRANCH"
            fi
            echo "Checking out the CI HEAD"
            git reset --hard "$CIRCLE_SHA1"

  make_artifacts_directory:
    steps:
      - run:
          name: Make artifacts directory
          command: mkdir -p "artifacts"

  upload_artifacts:
    steps:
      - store_artifacts:
          path: artifacts

jobs:
  build_amplify_ios_spm:
    <<: *defaults
    steps:
      - shallow_checkout
      - make_artifacts_directory
      - run:
          name: Build amplify for ios SPM
          command: xcodebuild build -scheme Amplify-Package -sdk iphonesimulator -destination "<< pipeline.parameters.ios-destination >>" | tee "artifacts/build-Ampify-for-ios-SPM.log" | xcpretty
  build_amplify_macos_spm:
    <<: *defaults
    steps:
      - shallow_checkout
      - make_artifacts_directory
      - run:
          name: Build amplify for macos SPM
          command: xcodebuild build -scheme Amplify-Package -sdk macosx -destination "<< pipeline.parameters.macos-destination >>" | tee "artifacts/build-Ampify-for-macos-SPM.log" | xcpretty
  build_amplify_tvos_spm:
    <<: *defaults
    macos:
      xcode: '14.3.0'
    steps:
      - shallow_checkout
      - make_artifacts_directory
      - run:
          name: Build amplify for tvOS SPM
          command: xcodebuild build -scheme Amplify-Package -sdk appletvsimulator -destination "<< pipeline.parameters.tvos-destination >>" | tee "artifacts/build-Ampify-for-tvos-SPM.log" | xcpretty
  build_amplify_watchos_spm:
    <<: *defaults
    macos:
      xcode: '14.3.0'
    steps:
      - shallow_checkout
      - make_artifacts_directory
      - run:
          name: Build amplify for watchOS SPM
          command: xcodebuild build -scheme Amplify-Package -sdk watchsimulator -destination "<< pipeline.parameters.watchos-destination >>" | tee "artifacts/build-Ampify-for-watchos-SPM.log" | xcpretty

  unit_test:
    <<: *defaults
    parameters:
      xcode-version:
        type: string
        default: 14.0.0
      scheme:
        type: string
      sdk:
        type: string
      destination:
        type: string
    macos:
      xcode: <<parameters.xcode-version>>
    description: << parameters.scheme >> unit test
    steps:
      - shallow_checkout
      - make_artifacts_directory
      - run:
          name: Build << parameters.scheme >>
          command: xcodebuild build-for-testing -scheme <<parameters.scheme>> -sdk << parameters.sdk >> -destination "<<parameters.destination>>" | tee "artifacts/build-<< parameters.scheme >>-<< parameters.sdk >>.log" | xcpretty
      - run:
          name: Test << parameters.scheme >>
          command: xcodebuild test -scheme <<parameters.scheme>> -sdk << parameters.sdk >> -destination "<<parameters.destination>>"  | tee "artifacts/test-<< parameters.scheme >>-<< parameters.sdk >>.log" | xcpretty --simple --color --report junit
      - run:
          name: Upload << parameters.scheme >> coverage report to Codecov
          command: bash $CIRCLE_WORKING_DIRECTORY/build-support/codecov.sh -F << parameters.scheme >>_unit_test -J '^<< parameters.scheme >>$'
      - store_test_results:
          path: build/reports
      - upload_artifacts

  generate_api_docs:
    <<: *defaults
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Jazzy API doc generation
          command: bash $CIRCLE_WORKING_DIRECTORY/CircleciScripts/jazzy_doc_gen.sh

  deploy:
    <<: *defaults
    parameters:
      lane:
        type: string
        default: 'unstable'
    description: deploy new release
    steps:
      - add_ssh_keys:
          fingerprints:
            - '3f:b4:9f:aa:0b:d7:c5:16:fb:44:44:35:cb:a7:70:e0'
      - checkout
      - ruby/install-deps
      - run:
          name: Release Amplify for Swift
          command: bundle exec fastlane << parameters.lane >>
          no_output_timeout: 60m

  fortify_scan:
    <<: *defaults
    steps:
      - shallow_checkout
      - run:
          name: Make source directory
          command: |
            mkdir source
            cp -r Amplify source
            cp -r AmplifyPlugins source
      - aws-cli/setup:
          role-arn: 'arn:aws:iam::971028514469:role/CircleCiOIDC'
          role-session-name: 'aws-s3-session'
      - run:
          name: Download License
          command: |
            aws s3 cp s3://amplify-swift-fortify-prod/fortify.license fortify.license
      - run:
          name: Download Installer
          command: |
            aws s3 cp s3://amplify-swift-fortify-prod/Fortify_SCA_and_Apps_22.1.1_Mac.tar.gz Fortify_SCA_and_Apps_22.1.1_Mac.tar.gz
            tar -xvf Fortify_SCA_and_Apps_22.1.1_Mac.tar.gz
            unzip Fortify_SCA_and_Apps_22.1.1_osx_x64.app.zip
      - run:
          name: Download Scripts
          command: |
            aws s3 cp s3://amplify-swift-fortify-prod/amplify_swift_fortify_scan.sh fortify_scan.sh
      - run:
          name: Run Installer
          command: |
            Fortify_SCA_and_Apps_22.1.1_osx_x64.app/Contents/MacOS/installbuilder.sh --mode unattended --installdir Fortify --InstallSamples 0  --fortify_license_path fortify.license --MigrateSCA 0
            export PATH=$CIRCLE_WORKING_DIRECTORY/Fortify/bin:$PATH
            echo "export PATH=$CIRCLE_WORKING_DIRECTORY/Fortify/bin:\$PATH" >> "$BASH_ENV"
            fortifyupdate -acceptKey
            sourceanalyzer -version
      - run:
          name: Run Scan
          command: |
            sh ./fortify_scan.sh source


deploy_requires: &deploy_requires
  requires:
    - build_amplify_ios_spm
    - build_amplify_macos_spm
    - build_amplify_tvos_spm
    - build_amplify_watchos_spm
    - ios_unit_test_amplify
    - ios_unit_test_awspluginscore
    - ios_unit_test_analytics
    - ios_unit_test_api
    - ios_unit_test_auth
    - ios_unit_test_datastore
    - ios_unit_test_geo
    - ios_unit_test_internal_pinpoint
    - ios_unit_test_push_notifications
    - ios_unit_test_storage
    - ios_unit_test_predictions
    - macos_unit_test_amplify
    - macos_unit_test_awspluginscore
    - macos_unit_test_analytics
    - macos_unit_test_api
    - macos_unit_test_auth
    - macos_unit_test_datastore
    - macos_unit_test_geo
    - macos_unit_test_internal_pinpoint
    - macos_unit_test_push_notifications
    - macos_unit_test_storage
    - macos_unit_test_predictions
    - tvos_unit_test_amplify
    - tvos_unit_test_awspluginscore
    - tvos_unit_test_analytics
    - tvos_unit_test_api
    - tvos_unit_test_auth
    - tvos_unit_test_datastore
    - tvos_unit_test_geo
    - tvos_unit_test_internal_pinpoint
    - tvos_unit_test_push_notifications
    - tvos_unit_test_storage
    - tvos_unit_test_predictions
    - watchos_unit_test_amplify
    - watchos_unit_test_awspluginscore
    - watchos_unit_test_analytics
    - watchos_unit_test_api
    - watchos_unit_test_auth
    - watchos_unit_test_datastore
    - watchos_unit_test_geo
    - watchos_unit_test_internal_pinpoint
    - watchos_unit_test_push_notifications
    - watchos_unit_test_storage
    - watchos_unit_test_predictions
    - fortify_scan

workflows:
  build_test_deploy:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - fortify_scan:
          context:
            - amplify-swift-aws-s3-download
      - build_amplify_ios_spm:
          requires:
            - fortify_scan
      - build_amplify_macos_spm:
          requires:
            - fortify_scan
      - build_amplify_tvos_spm:
          requires:
            - fortify_scan
      - build_amplify_watchos_spm:
          requires:
            - fortify_scan
      - unit_test:
          name: ios_unit_test_amplify
          scheme: Amplify
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_awspluginscore
          scheme: AWSPluginsCore
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_analytics
          scheme: AWSPinpointAnalyticsPlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_api
          scheme: AWSAPIPlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_auth
          scheme: AWSCognitoAuthPlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_datastore
          scheme: AWSDataStorePlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_geo
          scheme: AWSLocationGeoPlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_internal_pinpoint
          scheme: InternalAWSPinpointUnitTests
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_push_notifications
          scheme: AWSPinpointPushNotificationsPlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_storage
          scheme: AWSS3StoragePlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: ios_unit_test_predictions
          scheme: AWSPredictionsPlugin
          sdk: iphonesimulator
          destination: << pipeline.parameters.ios-destination >>
          requires:
            - build_amplify_ios_spm
      - unit_test:
          name: macos_unit_test_amplify
          scheme: Amplify
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_awspluginscore
          scheme: AWSPluginsCore
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_analytics
          scheme: AWSPinpointAnalyticsPlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_api
          scheme: AWSAPIPlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_auth
          scheme: AWSCognitoAuthPlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_datastore
          scheme: AWSDataStorePlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_geo
          scheme: AWSLocationGeoPlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_internal_pinpoint
          scheme: InternalAWSPinpointUnitTests
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_push_notifications
          scheme: AWSPinpointPushNotificationsPlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_storage
          scheme: AWSS3StoragePlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: macos_unit_test_predictions
          scheme: AWSPredictionsPlugin
          sdk: macosx
          destination: << pipeline.parameters.macos-destination >>
          requires:
            - build_amplify_macos_spm
      - unit_test:
          name: tvos_unit_test_amplify
          scheme: Amplify
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_awspluginscore
          scheme: AWSPluginsCore
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_analytics
          scheme: AWSPinpointAnalyticsPlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_api
          scheme: AWSAPIPlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_auth
          scheme: AWSCognitoAuthPlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_datastore
          scheme: AWSDataStorePlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_geo
          scheme: AWSLocationGeoPlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_internal_pinpoint
          scheme: InternalAWSPinpointUnitTests
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_push_notifications
          scheme: AWSPinpointPushNotificationsPlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_storage
          scheme: AWSS3StoragePlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: tvos_unit_test_predictions
          scheme: AWSPredictionsPlugin
          sdk: appletvsimulator
          destination: << pipeline.parameters.tvos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_tvos_spm
      - unit_test:
          name: watchos_unit_test_amplify
          scheme: Amplify
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_awspluginscore
          scheme: AWSPluginsCore
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_analytics
          scheme: AWSPinpointAnalyticsPlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_api
          scheme: AWSAPIPlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_auth
          scheme: AWSCognitoAuthPlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_datastore
          scheme: AWSDataStorePlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_geo
          scheme: AWSLocationGeoPlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_internal_pinpoint
          scheme: InternalAWSPinpointUnitTests
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_push_notifications
          scheme: AWSPinpointPushNotificationsPlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_storage
          scheme: AWSS3StoragePlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - unit_test:
          name: watchos_unit_test_predictions
          scheme: AWSPredictionsPlugin
          sdk: watchsimulator
          destination: << pipeline.parameters.watchos-destination >>
          xcode-version: '14.3.0'
          requires:
            - build_amplify_watchos_spm
      - deploy:
          name: deploy unstable
          <<: *deploy_requires
          filters:
            branches:
              only:
                - main
      - deploy:
          name: deploy stable
          lane: release
          <<: *deploy_requires
          filters:
            branches:
              only:
                - release
      - generate_api_docs:
          name: Generate api documentation
          requires:
            - deploy stable
          filters:
            branches:
              only:
                - release

  # Scheduled smoke test workflow
  # Jobs are pulled from the getting-started-smoke-test inline orb defined above
  canaries:
    when:
      and:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ "Canaries", << pipeline.schedule.name >> ]
    jobs:
      - getting-started-smoke-test/ios:
          xcode-version: "14.1.0"
          simulator-os-version: "16.1"
          simulator-device: "iPhone 14 Pro"
      - getting-started-smoke-test/ios:
          xcode-version: "13.4.1"
          simulator-os-version: "15.5"
          simulator-device: "iPhone 13 Pro"
